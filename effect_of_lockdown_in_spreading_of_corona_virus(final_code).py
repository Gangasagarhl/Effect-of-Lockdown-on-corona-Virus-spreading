# -*- coding: utf-8 -*-
"""Effect_of_lockdown_in_spreading_of_corona_virus(final code).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18xDIcyAKWUIx_C6ov1dfrWu7ZTpRUMWQ
"""

''' AIM:- "Effect of reduction in spreading of corona virus in India Due to lockdown".
Steps:

"******** First Phase : How much corona can affect number of cases?(confirmed,death,recovery).Users curiosity for the number of days.***********"
1.Import the required libraries.
2.Import the data set.
3.Preparing data for global cases(confirmed,death,recovery).
4.Predicting future of global,what might be the number of cases going to recorded for next 90 days(default,which can be changed by passing valie to the function)
********* End of the first phase *******************


"************  Second Phase:User interaction for their curiosity,what is going on their liked Nation *************"
5.Enter the country name,if exist and entered in proper format,error is not raised.
6.Prepare the dataset for the Country.
7.Visualise the data on confirmed,death and recovered data.
8.Using fbprophet predict the current situation data.
************** End of Second phase ***********************

******** Third Phase: ' Main Aim of project '--> Effect of Lockdown on Corona Spreading.
Proof : 
a)" Comparing current situation between India and America and explaining situation ". 
b)" What might have happend in India ,if lockdown was not imposed".
c)" Using b(above step) ,the day we would have reached the current count of cases ,if lockdown was not imposed".


9.Since the spreading(confirmed cases) was found to be exponential,we are applying exponent rate to the number of cases recorded in India on daily basis(Data prepeartion).
10.Concluding in words - whether lockdown is effective(helpful) or not.

**********

****** Fourth phase: 'Reason we should pay special  Thanks to  life savers(Researchers,Doctors,Organisation(ex: WHO )) from Medical field':
[No Idea about Corona,No precautions,No social distancing,Totally had no idea about this to world]
Proof:
a)' What might be the number of cases if no one intimated,that there is virus like this?'
b)' What might be the number of deaths? '.
c)' How much would have been the percentage and the count of life in risk?.'

12. Applying exponential formula,to  the data of world.
13. Estimating the ratio of number of death cases.
14. From 14,How much life will be endangered only by this pandemic(by neglecting other issues like,food shortage and many others).
15. Conclusion -Thanks to all Medical workers.

***** End Of Fourth phase *************

16.Concluding Project.

###### THE END ########
'''

# Commented out IPython magic to ensure Python compatibility.
# Importing the required libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline
from fbprophet import Prophet

#confirmed cases till now globally
data_confirmed_global=pd.read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv",error_bad_lines=False,parse_dates=True)
 
#Total number of patients recovered daily
data_recovered_global=pd.read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv",error_bad_lines=False,parse_dates=True)
 
#Total number of deaths occuring daily
data_death_global=pd.read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv",error_bad_lines=False,parse_dates=True)

#Used to extract the dates from dataframe 
ds=data_confirmed_global.columns[4:]
 
''' 
Below function prepare dataframe globally and locally ,which must opt for fbprophet
'''
def data_to_DataFrame_Preparing_Data(data,country=False):
  if not country:
    temp=list(data.iloc[:,4:].sum())
   
  else:  
    temp=list(data[data["Country/Region"]==country].iloc[:,4:].sum())
 
  #required format for fbprophet
  DataFrame_In_required_format=pd.DataFrame({"ds":ds,"y":temp})
  return DataFrame_In_required_format

#above function returns dataframe,so these all data are datframe
 
#Total confirmed cases globally
data_global_confirmed=data_to_DataFrame_Preparing_Data(data_confirmed_global)
 
#Total Death cases globally
data_global_death=data_to_DataFrame_Preparing_Data(data_death_global)
 
#Total recovered cases globally
data_global_recovery=data_to_DataFrame_Preparing_Data(data_recovered_global)

# For How many more days,do you want forecast  
days=int(input("Enter the Number of days for producing prediction(you would like to see):  "))

def draw_graph_for_current_scenario(confirmed,death,recovered,country=False):
  print("Current Situation:\n\n")
  if not country:#for global
    confirmed=list(confirmed.iloc[:,4:].sum())
    death=list(death.iloc[:,4:].sum())
    recovered=list(recovered.iloc[:,4:].sum())
    title="Golbally"
 
  else:
    confirmed=list(confirmed[confirmed["Country/Region"]==country].iloc[:,4:].sum())
    death=list(death[death["Country/Region"]==country].iloc[:,4:].sum())
    recovered=list(recovered[recovered["Country/Region"]==country].iloc[:,4:].sum())
    title=country
 
  #data preperation  
  combining_data=pd.DataFrame({"Confirmed":confirmed,"Death":death,"Recovered":recovered},index=ds)
  combining_data=combining_data.astype({"Confirmed":int,"Death":int,"Recovered":int})
  
  combining_data.plot(figsize=(21,7))
  plt.title("Concerned with "+title+" Issues")
  plt.xlabel("\n\nTime in days")
  plt.ylabel("Number of cases\n\n")
  plt.show()
 
  print("Confirmed: ",confirmed[-1],"Recovered: ",recovered[-1],"Death: ", death[-1])

draw_graph_for_current_scenario(data_confirmed_global,data_death_global,data_recovered_global)

''' Documentation about fbprophet->follows sklearn pattern
    dataframe must and should have two columns for fbprophet to predict.
    fisrt column->"ds"
    second column->"y"
    ,if don't then it raises key error.
''' 
 
#It predicts for number of days you want,by default predict for future 90 days
def predicting_and_visualising_using_fbprophet(data,Title_for_graph,Number_of_days_to_be_predicted=90):
  p=Prophet() # creating object for Prophet
  p.fit(data) # Fitting data
  future=p.make_future_dataframe(periods=int(Number_of_days_to_be_predicted)) #calculating the many days prediction is needed
  forecast=p.predict(future)# model built,is used to predict future
  bolded_string = "\033[1m" + Title_for_graph + "\033[9m" # Covert the content to bold using python anscii
  print("\n\n\t\t\t\t\t",bolded_string)
  print("\n\n")
  p.plot(forecast,xlabel="Time In Days",ylabel="Number of {} ".format(Title_for_graph)) # Ploting graph
  plt.show()
 
  temp=int(list(forecast["yhat"])[-1])
  print("\t\n\nBy the end of ","\033[1m" + str(list(forecast["ds"])[-1]) + "\033[9m"+'\033[94m', Title_for_graph , "would be  "+"\033[1m"  +'\033[91m'+'\033[4m' + str(temp) +"\033[0m")
  return temp

''' Syntax of the fuction-> predicting_and_visualising_using_fbprophet(data,Title_for_graph,Number_of_days_to_be_predicted)'''

global_confirmed_on_end_of_prediction_date=predicting_and_visualising_using_fbprophet(data_global_confirmed,"Confirmed cases 'Globally' ",days)

global_death_on_end_of_prediction_date=predicting_and_visualising_using_fbprophet(data_global_death,"Death cases 'Globally' ",days)
death_rate_globally=(global_death_on_end_of_prediction_date/global_confirmed_on_end_of_prediction_date)*100
print("\nBy the end of predicting day" ,'\033[1m'+'\033[36m'+"Death Rate "+'\033[0m',"around global is approximatley",\
      '\033[1m'+'\033[91m'+str(death_rate_globally)+'\033[0m',"\n\n")

global_recovery_on_end_of_prediction_date=predicting_and_visualising_using_fbprophet(data_global_recovery,"Recovery Cases 'Globally'",days)


print("\nBy the end of predicting day" ,'\033[1m'+'\033[36m'+"Recovery Rate "+'\033[0m',"around global is approximatley",\
      '\033[1m'+'\033[92m'+str((global_recovery_on_end_of_prediction_date/global_confirmed_on_end_of_prediction_date)*100)+'\033[0m',"\n\n")

print("\n\n\n*************First phase Completed **********\n\n***********Second phase  Started ***********\n\n")

country=input("\n\nEnter the country Name that you are interested in(Entering name should be in capitalised format,ex:India,US,UK etc):")
 
#Untill unless you enter the correct name of a country ,i'll keep asking you the country name.
while country not in list(data_confirmed_global["Country/Region"]):
  print("Name of the country doesn't exist")
  print("Entered Country probably not exist or it might be missing the capitalised format of country")
  print("You entered : ",country,"\nProbably required format is like:",country.capitalize())
  country=input("Enter the country Name that you are interested in(Entering name should be in capitalised format,ex:India,US,UK etc):")
  
 
#Total confirmed cases in country
data_country_confirmed=data_to_DataFrame_Preparing_Data(data_confirmed_global,country)
#Total Death cases in country
data_country_death=data_to_DataFrame_Preparing_Data(data_death_global,country)
#Total recovered cases in country
data_country_recovery=data_to_DataFrame_Preparing_Data(data_recovered_global,country)
 
 
days=int(input("Enter the Number of days for producing prediction(you would like to see):  "))

draw_graph_for_current_scenario(data_confirmed_global,data_death_global,data_recovered_global,country)

#confirmed for a country
country_confirmed_on_end_of_prediction_date=predicting_and_visualising_using_fbprophet(data_country_confirmed,"Confirmed cases in "+country,days)

country_death_on_end_of_prediction_date=predicting_and_visualising_using_fbprophet(data_country_death,"Death cases in  "+country,days)

print("\nBy the end of predicting day" ,'\033[1m'+'\033[36m'+"Death Rate "+'\033[0m',"around  "+country+" is approximatley",\
      '\033[1m'+'\033[91m'+str((country_death_on_end_of_prediction_date/country_confirmed_on_end_of_prediction_date)*100)+'\033[0m',"\n\n")

country_recovery_on_end_of_prediction_date=predicting_and_visualising_using_fbprophet(data_country_recovery,"Recovery cases in "+country,days)

print("\nBy the end of predicting day" ,'\033[1m'+'\033[36m'+"Recovery Rate "+'\033[0m',"around  "+country+" is approximatley",\
      '\033[1m'+'\033[92m'+str((country_recovery_on_end_of_prediction_date/country_confirmed_on_end_of_prediction_date)*100)+'\033[0m',"\n\n")

print("\n\n\n*************Second phase Completed **********\n\n***********Third phase  Started ***********\n\n")

# From this I have learnt, What the rate of corona virus spreading? initially. 
import webbrowser
webbrowser.open("https://theconversation.com/coronavirus-is-growing-exponentially-heres-what-that-really-means-134591")



#3a

# returns the number of cases recording daily in India and America
def country_data_summing(data,country):
  temp=list(data[data["Country/Region"]==country].iloc[:,4:].sum())#confirmed cases daily
  temp_last_day_confirm=temp[-1]
  return temp,temp_last_day_confirm

#Data preperation

India=country_data_summing(data_confirmed_global,"India")# confirmed cases in India

USA=country_data_summing(data_confirmed_global,"US")# confirmed cases in USA

#Datframe prepeartion
comparing_data_confirmed=pd.DataFrame({"India":India[0],"USA":USA[0]},index=ds)
#plotting for data
comparing_data_confirmed.plot(figsize=(21,7))

plt.title("Comparision b/w USA and India\n")
plt.xlabel("Time Series Data(days)")
plt.ylabel("Count in Number")
plt.show()

print("By ",'\033[1m'+str(ds[-1])+"\033[0m",'\033[1m'+'\033[94m'+"USA's "+"\033[0m"+ "Confirmed cases is:"+'\033[1m'+'\033[91m'+str(USA[1])+'\033[0m',\
      '\033[1m'+'\033[94m'+"    India's "+"\033[0m"+ "Confirmed cases is:"+'\033[1m'+'\033[91m'+str(India[1])+'\033[0m')

print("The Reason why USA has  more confirmed cases than India:\n"+
"1.Lockdown has started in India at 23rd March 2020 completley(Nation wide).USA imposed lockdown lately.\n"+
"2.ockdown was considered as a serious issue in India,whereas from the news it can be inferred that Trump started his election campaign admist the pandemic.\n"+
"3.LInspite of the number of cases raising daily,American's negelected the situation.\n\n"+
"\033[1m"+"\033[94m"+"NOTE:"+"\033[0m"+"Even though India and USA had same start(shown through graph),there is very much difference in count of confirmed cases.\n"+
"From this we can conclude that:'Lockdown breaks the chain in spreading of corona'. \n\n\n\n"+"*Still there are many reasons(selectively observed)")

# 3b)


''' 
From 'theconversation.com'  we got,growth rate initial exponential rate varies from "1.5 to 4" 
so,by chosing the least rate=1.5  .

In this,we plot graph.
'''

# from this we are calculating the number of cases found daily
diff=[0]
for i in range(len(India[0])-1):
  diff.append(India[0][i+1]-India[0][i])

#This calculates daily recording data for confirmation in unlocked stage
effective_growth=[]
for j in range(len(diff)):
  effective_growth.append(int(diff[j]**1.1))

#cumulative summation(data prepeartion step)
summing=[]
for i in range(len(effective_growth)):
  summing.append(sum(effective_growth[:i+1]))

# data frame prepeartion
India_current_and_expectation_if_no_lockdown=pd.DataFrame({"Current_Situation":India[0],"If_LockDown_not_imposed":summing},index=ds)

# Visualising the prepared data
India_current_and_expectation_if_no_lockdown.plot(figsize=(21,7))
plt.title("Showing the Number of Cases of Confirmation\n")
plt.xlabel("Time Series data(day)")
plt.ylabel("Number of Confirmation cases")
plt.show()

print("\n\n"+"\033[1m"+"Conclusion: "+"\033[0m"+"What might have happend by ",'\033[1m'+str(ds[-1])+"\033[0m",'\033[1m'+'\033[94m'+"Current Situation's  "+"\033[0m"+ "Confirmed cases are:"+'\033[1m'+'\033[91m'+str(India[1])+'\033[0m'+".",\
      '\033[1m'+'\033[94m'+"    If Lockdown not imposed, "+"\033[0m"+ "Confirmed cases would be:"+'\033[1m'+'\033[91m'+str(summing[-1])+'\033[0m'+".")
print("From this we can infer that,lockdown is most important to break spreading of Virus.")

# 3c
for i in range(len(summing)):
  if (India[1]<= summing[i]):
    print("If Lockdown have not imposed we might have reached till day's ("+str(ds[-1])+") confirmed cases early on "+"\033[1m"+"\033[94m"+str(ds[i+1])+"\033[0m",",  Current confirmation case are: ",India[1])
    break
print("From this we can infer that,lockdown is most important to break spreading of Virus.")

print("Conclusion(Third phase):Lockdown is one of the important steps,for preventing the explosion of Corona Virus. ")
print("\n***Third phase End****\n\n**** Fourth Phase:Assumption phase(Thanking phase) ******")

# 4th phase(assumption phase)
# growing_rate_exponential shall be equal to 1.2.
''' Reason for reduction in exponential growth rate:

1.Since the cases grows exponentially,small increment leads to more cases.
2."Herd Immunity":The group of people have got resistance(like survival of fittest).

'''

''' Note:Growth rate may slowdown further, in further days '''

#4a and 4b
confirmed_global_cases=list(data_confirmed_global.iloc[:,4:].sum())

# from this we are calculating the number of cases found daily
diff=[0]
for i in range(len(confirmed_global_cases)-1):
  diff.append(confirmed_global_cases[i+1]-confirmed_global_cases[i])

#This calculates daily recording data for confirmation in unlocked stage
effective_growth=[]
for j in range(len(diff)):
  effective_growth.append(int(diff[j]**1.1))

#cumulative summation(data prepeartion step)
summing=[]
for i in range(len(effective_growth)):
  summing.append(sum(effective_growth[:i+1]))

#preparing dataframe suitable for predicting future
combining_not_intimation=pd.DataFrame({"Current":confirmed_global_cases,"If_world_not_intimated":summing},index=ds)

combining_not_intimation.plot(figsize=(21,7))
plt.title("Current  Vs.  If Cororna Spreading rate=1.2,  because of no one is intimated\n\n")
plt.xlabel("\nTime series data (days)\n")
plt.ylabel("Count in Confirmation cases\n\n")
plt.show()
print("Current Number of cases ( by  "+str(ds[-1])+")would be(if not intimated ) :"+"\033[1m"+"\033[94m"+str(int(summing[-1]))+"\033[0m")



#4c and 4d
print("As we have observed the rate of death in world during phase 1 for current cases,by using it,we are estimating what might be the number of deaths.\n")

#Without intimatation
death_assumed=summing[-1]*(death_rate_globally/100)
death_equal_to_ratio_with_world_population=(death_assumed/(759.43*10**7))*100

#After intimating corona presence
current_death_global=list(data_death_global.iloc[:,4:].sum())[-1]
current_death_global_percentage=(current_death_global/(759.43*10**7))*100

#USer intimation
print("\nCurrent death is:","\033[1m"+"\033[91m"+str(int(current_death_global))+"\033[0m"+"  which is equal to the world's  "+"\033[1m"+"\033[91m"+str(current_death_global_percentage)+"\033[0m"+"%  percentage.")
print("Number of deaths(by now) assumed to be :","\033[1m"+"\033[91m"+str(int(death_assumed))+"\033[0m","Which is equal to the world's "+"\033[1m\033[91m"+str(death_equal_to_ratio_with_world_population)+"\033[0m"+"%  population and the same number of peoples will be in risk.")
print("\nNOTE: Death rate may increase or decrease depending  on the individuals.")

print(" We conclude by saying a special thanks to all life savers / Corona warriors throughout the world without whom the total death rate might have increased")
#****** Fourth phase completed *****

